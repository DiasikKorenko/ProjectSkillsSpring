package com.tms.repository;

import com.tms.domain.User;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import org.hibernate.query.Query;
import org.springframework.stereotype.Repository;

import java.sql.Date;

@Repository
public class UserRepository {

    private final SessionFactory sessionFactory;

    public UserRepository() {
        this.sessionFactory = new Configuration().configure().buildSessionFactory(); //TODO:to configure class
    }

    public User getUserById(int id) {
        Session session = sessionFactory.openSession();
        session.beginTransaction();
        Query query = session.createQuery("from User u where u.id=:userId");
        query.setParameter("userId", id);
        User user = (User) query.getSingleResult();
        session.close();
        if (user != null) {
            return user;
        }
        return new User();
    }


    public boolean createUser(User user) {
        /*   int result = template.update("INSERT INTO users (id,first_name,user_name,last_name,email,password_user,job_title,organization_name,legal_address,unp_or_tin,countries,documentation,telephone_1,telephone_2,telephone_3,created,changed,is_deleted)" +
                    " VALUES (DEFAULT,?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,DEFAULT)", new Object[]{user.getFirstName(), user.getUserName(), user.getLastName(), user.getEmail(), user.getPasswordUser(), user.getJobTitle(), user.getOrganizationName(), user.getLegalAddress(),
                    user.getUnpTin(), user.getCountries(), user.getDocumentation(), user.getTelephone1(), user.getTelephone2(), user.getTelephone3(),new Date((new java.util.Date()).getTime()),new Date((new java.util.Date()).getTime())});
            return result == 1;*/
        try {
            Session session = sessionFactory.openSession();
            session.beginTransaction();
            //session.save(user);
            Query query = session.createNativeQuery("INSERT INTO users (id,first_name,user_name,last_name,email,password_user,job_title,organization_name,legal_address,unp_or_tin,countries,documentation,telephone_1,telephone_2,telephone_3,created,changed,is_deleted)" +
                    "VALUES (DEFAULT, :first_name,:user_name,:last_name,:email,:password_user,:job_title,:organization_name,:legal_address,:unp_or_tin,:countries,:documentation,:telephone_1,:telephone_2,:telephone_3,:created, :changed, DEFAULT)");
            query.setParameter("first_name", user.getFirstName());
            query.setParameter("user_name", user.getUserName());
            query.setParameter("last_name", user.getLastName());
            query.setParameter("email", user.getEmail());
            query.setParameter("password_user", user.getPasswordUser());
            query.setParameter("job_title", user.getJobTitle());
            query.setParameter("organization_name", user.getOrganizationName());
            query.setParameter("legal_address", user.getLegalAddress());
            query.setParameter("unp_or_tin", user.getUnpTin());
            query.setParameter("countries", user.getCountries());
            query.setParameter("documentation", user.getDocumentation());
            query.setParameter("telephone_1", user.getTelephone1());
            query.setParameter("telephone_2", user.getTelephone2());
            query.setParameter("telephone_3", user.getTelephone3());
            query.setParameter("created", user.getCreated());
            query.setParameter("changed", user.getChanged());
            query.executeUpdate();
            session.getTransaction().commit();
            session.close();
            return true;
        } catch (Exception e) {
            System.out.println(e);
        }
        return false;
    }


 public boolean updateUser(User user){

       /* int result = template.update("UPDATE users SET first_name=?,user_name=?, last_name=?,organization_name=?,unp_or_tin=?,legal_address=?,documentation=?, email=?, password_user=?,telephone_1=?,telephone_2=?,telephone_3=?,changed=?  where id=?",
                 new Object[]{user.getFirstName(),user.getUserName(), user.getLastName(),user.getOrganizationName(),user.getUnpTin(),user.getLegalAddress(),user.getDocumentation(),user.getEmail(),user.getPasswordUser(),user.getTelephone1(),user.getTelephone2(),user.getTelephone3(),new Date((new java.util.Date()).getTime()),user.getId()});
        return result == 1;*/
     Session session = sessionFactory.openSession();
     session.beginTransaction();
     Query query = session.createQuery("UPDATE User set firstName=:first_name,userName=:user_name,lastName=:last_name,email=:email,passwordUser=:password_user,jobTitle=:job_title,organizationName=:organization_name,legalAddress=:legal_address,unpTin=:unp_or_tin,countries=:countries,documentation=:documentation,telephone1=:telephone_1,telephone2=:telephone_2,telephone3=:telephone_3,changed=:changed WHERE id=:userId");
     query.setParameter("userId", user.getId());
     query.setParameter("first_name", user.getFirstName());
     query.setParameter("user_name", user.getUserName());
     query.setParameter("last_name", user.getLastName());
     query.setParameter("email", user.getEmail());
     query.setParameter("password_user", user.getPasswordUser());
     query.setParameter("job_title", user.getJobTitle());
     query.setParameter("organization_name", user.getOrganizationName());
     query.setParameter("legal_address", user.getLegalAddress());
     query.setParameter("unp_or_tin", user.getUnpTin());
     query.setParameter("countries", user.getCountries());
     query.setParameter("documentation", user.getDocumentation());
     query.setParameter("telephone_1", user.getTelephone1());
     query.setParameter("telephone_2", user.getTelephone2());
     query.setParameter("telephone_3", user.getTelephone3());
     query.setParameter("changed", new Date(System.currentTimeMillis()));
     query.executeUpdate();
     session.getTransaction().commit();
     session.close();
     return true;
    }


   public boolean deleteUser(int id) {
       try {
           Session session = sessionFactory.openSession();
           session.beginTransaction();
           Query query = session.createQuery("UPDATE User set isDeleted=true WHERE id=:userId");
           query.setParameter("userId", id);
           query.executeUpdate();
           session.getTransaction().commit();
           session.close();
           return true;
       } catch (Exception e) {
           System.out.println(e);
       }
       return false;
   }

}



